name: CI

on:
  push:
  #pull_request:
    branches:
      #- main
      - toghr

jobs:
  get-changed-files:
    name: 'List changed modules'
    #if: github.ref == 'refs/heads/develop' || github.ref == 'refs/heads/staging' || github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    steps:
      - name: 'List changed modules'
        id: 'files'
        uses: jitterbit/get-changed-files@v1
      - run: |
          for changed_file in ${{ steps.files.outputs.added_modified }}; do
            folder=$(echo $changed_file | cut -d '/' -f 1)
            if [ $folder != ".github" ]; then
              prefixes+=("${folder}")
            fi
          done

          modules=()
          while IFS= read -r -d '' x
          do
            modules+=("$x")
          done < <(printf "%s\0" "${prefixes[@]}" | sort -uz)

          export MODULES_TO_BUILD="${modules[*]}"
          echo "::set-output name=modules_to_build::${MODULES_TO_BUILD}"
    outputs:
        modules_to_build: ${{ steps.identify.outputs.modules_to_build}}


  push_image:
    name: 'Build & Push Image'
    needs: get-changed-files

    runs-on: ubuntu-latest
    steps:
      - name: 'Build & Push to GHR'
        uses: actions/checkout@v2
      - run: |
          echo "${{needs.get-changed-files.outputs.modules_to_build}}"


#      - run: echo ${{ secrets.GITHUB_TOKEN }} | docker login docker.pkg.github.com -u $GITHUB_ACTOR --password-stdin
#      - run: echo "${{needs.get_changed_files.outputs.modules_to_build}}"
      
      
      #- run: docker pull docker.pkg.github.com/$GITHUB_REPOSITORY/build-cache-no-buildkit || true
      #- run: docker build . -t thing --cache-from=docker.pkg.github.com/$GITHUB_REPOSITORY/build-cache-no-buildkit
      #- run: docker build . -t thing --cache-from=docker.pkg.github.com/$GITHUB_REPOSITORY/build-cache-no-buildkit
      #- run: docker tag thing docker.pkg.github.com/$GITHUB_REPOSITORY/build-cache-no-buildkit && docker push docker.pkg.github.com/$GITHUB_REPOSITORY/build-cache-no-buildkit || true
