name: CI

on:
  push:
  #pull_request:
    branches:
      #- main
      - toghr

jobs:
  get-changed-files:
    name: 'List changed modules'
    #if: github.ref == 'refs/heads/develop' || github.ref == 'refs/heads/staging' || github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    outputs:
      modules_to_build: ${{ steps.list.outputs.changed_modules }}
    steps:
    - name: 'List changed files'
      id: 'files'
      uses: jitterbit/get-changed-files@v1
    - name: 'List changed modules'
      id: 'list'
      run: |
        for changed_file in ${{ steps.files.outputs.added_modified }}; do
          folder=$(echo $changed_file | cut -d '/' -f 1)
          if [ $folder != ".github" ]; then
            prefixes+=("${folder}")
          fi
        done

        modules=()
        while IFS= read -r -d '' x
        do
          modules+=("$x")
        done < <(printf "%s\0" "${prefixes[@]}" | sort -uz)

        export MODULES_TO_BUILD="${modules[*]}"
        echo "${MODULES_TO_BUILD}"
        echo "::set-output name=changed_modules::${MODULES_TO_BUILD}"
   
  push-image:
    name: 'Build & Push Image'
    needs: get-changed-files
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      #- run: docker pull ghcr.io/$GITHUB_REPOSITORY/build-cache-no-buildkit || true
      - name: 'Login to GHCR'
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      #  run: echo ${{ secrets.GITHUB_TOKEN }} | docker login ghcr.io -u $GITHUB_ACTOR --password-stdin
      - name: 'Build and push to GHCR'
        env:
          GITHUB_REPOSITORY: ${{github.event.repository.name}}
        run: |
          for module in ${{ needs.get-changed-files.outputs.modules_to_build }}; do
            docker pull ghcr.io/${GITHUB_REPOSITORY}/${module}:latest || true
            docker build  -t ghcr.io/${GITHUB_REPOSITORY}/${module}:latest -f ${module}/Dockerfile . --cache-from=ghcr.io/${GITHUB_REPOSITORY}/${module}
            docker push ghcr.io/${GITHUB_REPOSITORY}/${module}:latest || true
          done
        
      #- run: docker build . -t thing --cache-from=ghcr.io/$GITHUB_REPOSITORY/build-cache-no-buildkit
      #- run: docker tag thing ghcr.io/$GITHUB_REPOSITORY/build-cache-no-buildkit && docker push ghcr.io/$GITHUB_REPOSITORY/build-cache-no-buildkit || true
